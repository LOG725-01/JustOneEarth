{
  "metadata" : {
    "name" : "Log725-JustOneEarth",
    "description" : "",
    "tooltip" : "",
    "logoLink" : "",
    "links" : [ ]
  },
  "summary" : [ ],
  "srcRoot" : "..",
  "extensions" : [ "cs", "txt", "json", "xml", "cpp", "htm" ],
  "ignore" : [ {
    "pathPattern" : ".*/[.][a-zA-Z0-9_]+.*",
    "contentPattern" : "",
    "exception" : false,
    "note" : "Hidden files and folders"
  }, {
    "pathPattern" : ".*/git[-]history[.]txt",
    "contentPattern" : "",
    "exception" : false,
    "note" : "Git history"
  }, {
    "pathPattern" : ".*/git[-][a-zA-Z0-9_]+[.]txt",
    "contentPattern" : "",
    "exception" : false,
    "note" : "Git data exports for sokrates analyses"
  } ],
  "main" : {
    "name" : "main",
    "sourceFileFilters" : [ {
      "pathPattern" : ".*/Assets/.*",
      "contentPattern" : "",
      "exception" : false,
      "note" : ""
    } ],
    "files" : [ ]
  },
  "test" : {
    "name" : "test",
    "sourceFileFilters" : [ {
      "pathPattern" : ".*/[Tt]ests/.*",
      "contentPattern" : "",
      "exception" : false,
      "note" : "Test files"
    }, {
      "pathPattern" : ".*/IntegrationTests?/.*",
      "contentPattern" : "",
      "exception" : false,
      "note" : "Test files"
    }, {
      "pathPattern" : ".*[.][Tt]ests[.].*",
      "contentPattern" : "",
      "exception" : false,
      "note" : "Test files"
    }, {
      "pathPattern" : ".*[.]tests[.].*",
      "contentPattern" : "",
      "exception" : false,
      "note" : "Test files"
    }, {
      "pathPattern" : ".*/test_.*",
      "contentPattern" : "",
      "exception" : false,
      "note" : "Test files"
    }, {
      "pathPattern" : ".*/UnitTests?/.*",
      "contentPattern" : "",
      "exception" : false,
      "note" : "Test files"
    }, {
      "pathPattern" : ".*UnitTests[.][a-zA-Z0-9_]+",
      "contentPattern" : "",
      "exception" : false,
      "note" : "Test files"
    }, {
      "pathPattern" : ".*[-]test[-].*",
      "contentPattern" : "",
      "exception" : false,
      "note" : "Test files"
    }, {
      "pathPattern" : ".*[-]tests[-].*",
      "contentPattern" : "",
      "exception" : false,
      "note" : "Test files"
    } ],
    "files" : [ ]
  },
  "generated" : {
    "name" : "generated",
    "sourceFileFilters" : [ {
      "pathPattern" : ".*[.]meta",
      "contentPattern" : ".*fileFormatVersion[:] .*",
      "exception" : false,
      "note" : "A metadata file from Unity3D"
    }, {
      "pathPattern" : ".*[.]csproj",
      "contentPattern" : ".*fileFormatVersion[:] .*",
      "exception" : false,
      "note" : "A metadata file from Unity3D"
    }, {
      "pathPattern" : ".*[.]sln",
      "contentPattern" : ".*fileFormatVersion[:] .*",
      "exception" : false,
      "note" : "A metadata file from Unity3D"
    }, {
      "pathPattern" : ".*/Libary/.*",
      "contentPattern" : "[/][/][ ]*<auto[-]?generated.*",
      "exception" : false,
      "note" : "A generated C# file"
    }, {
      "pathPattern" : ".*/Logs/.*",
      "contentPattern" : "[/][/][ ]*<auto[-]?generated.*",
      "exception" : false,
      "note" : "A generated C# file"
    }, {
      "pathPattern" : ".*/obj/.*",
      "contentPattern" : "[/][/][ ]*<auto[-]?generated.*",
      "exception" : false,
      "note" : "A generated C# file"
    }, {
      "pathPattern" : ".*/UserSettings/.*",
      "contentPattern" : "[/][/][ ]*<auto[-]?generated.*",
      "exception" : false,
      "note" : "A generated C# file"
    } ],
    "files" : [ ]
  },
  "buildAndDeployment" : {
    "name" : "build and deployment",
    "sourceFileFilters" : [ {
      "pathPattern" : ".*[.]git[a-z]+",
      "contentPattern" : "",
      "exception" : false,
      "note" : "Git configuration files"
    }, {
      "pathPattern" : ".*/[.]gitignore",
      "contentPattern" : "",
      "exception" : false,
      "note" : "Git ignore files"
    }, {
      "pathPattern" : ".*/package[.]json",
      "contentPattern" : "",
      "exception" : false,
      "note" : "npm configuration"
    }, {
      "pathPattern" : ".*/[.]gitattributes",
      "contentPattern" : "",
      "exception" : false,
      "note" : "Git attributes"
    } ],
    "files" : [ ]
  },
  "other" : {
    "name" : "other",
    "sourceFileFilters" : [ {
      "pathPattern" : ".*/[.]gitignore",
      "contentPattern" : "",
      "exception" : false,
      "note" : "Ignore list"
    }, {
      "pathPattern" : ".*/[Dd]ocumentation/.*",
      "contentPattern" : "",
      "exception" : false,
      "note" : "Documentation"
    }, {
      "pathPattern" : ".*[.]json",
      "contentPattern" : "",
      "exception" : false,
      "note" : "JSON files"
    }, {
      "pathPattern" : ".*[.]txt",
      "contentPattern" : "",
      "exception" : false,
      "note" : "Text files"
    }, {
      "pathPattern" : ".*[.]obj",
      "contentPattern" : "",
      "exception" : false,
      "note" : "Geometry definition files"
    }, {
      "pathPattern" : ".*[.]md",
      "contentPattern" : "",
      "exception" : false,
      "note" : "Markdown files"
    }, {
      "pathPattern" : ".*/LICENSE[.][a-z0-9]+",
      "contentPattern" : "",
      "exception" : false,
      "note" : "Text files"
    }, {
      "pathPattern" : ".*/README[.][a-z0-9]+",
      "contentPattern" : "",
      "exception" : false,
      "note" : "Text files"
    }, {
      "pathPattern" : ".*[.]editorconfig",
      "contentPattern" : "",
      "exception" : false,
      "note" : "NPM Config"
    }, {
      "pathPattern" : ".*[.]plist",
      "contentPattern" : "",
      "exception" : false,
      "note" : "Property list files"
    }, {
      "pathPattern" : ".*/[.]npmignore",
      "contentPattern" : "",
      "exception" : false,
      "note" : "Ignore list"
    }, {
      "pathPattern" : ".*[.]po",
      "contentPattern" : "",
      "exception" : false,
      "note" : "Properties"
    }, {
      "pathPattern" : ".*/[Dd]emos?/.*",
      "contentPattern" : "",
      "exception" : false,
      "note" : "Documentation"
    }, {
      "pathPattern" : ".*[.]svg",
      "contentPattern" : "",
      "exception" : false,
      "note" : "SVG files"
    }, {
      "pathPattern" : ".*/Packages/.*",
      "contentPattern" : "",
      "exception" : false,
      "note" : "Package Folder"
    }, {
      "pathPattern" : ".*/ProjectSettings/.*",
      "contentPattern" : "",
      "exception" : false,
      "note" : "project Settings"
    } ],
    "files" : [ ]
  },
  "logicalDecompositions" : [ {
    "name" : "frequency of changes",
    "scope" : "main",
    "filters" : [ ],
    "componentsFolderDepth" : 0,
    "minComponentsCount" : 0,
    "components" : [ {
      "name" : "1-5 changes",
      "sourceFileFilters" : [ ],
      "files" : [ "Assets/Scripts/Audio/AudioManager.cs", "Assets/Scripts/Audio/AudioMixerManager.cs", "Assets/Scripts/CameraController.cs", "Assets/Scripts/Environnement/AnimalAnimatorController.cs", "Assets/Scripts/Environnement/CloudMouvement.cs", "Assets/Scripts/Environnement/CloudSpawner.cs", "Assets/Scripts/GameLogic/CardConditions/ICardCondition.cs", "Assets/Scripts/GameLogic/CardConditions/OnlyOnEnemyTile.cs", "Assets/Scripts/GameLogic/CardConditions/OnlyOnNeutralTile.cs", "Assets/Scripts/GameLogic/CardConditions/TileMustBeTypeOf.cs", "Assets/Scripts/GameLogic/CardConditions/TileMustHaveStructure.cs", "Assets/Scripts/GameLogic/CardEffects/DestroyStructureEffect.cs", "Assets/Scripts/GameLogic/CardEffects/ExempleEffect.cs", "Assets/Scripts/GameLogic/CardEffects/GainRessourceOfType.cs", "Assets/Scripts/GameLogic/CardEffects/ICardEffect.cs", "Assets/Scripts/GameLogic/CardEffects/NextTurnEffect.cs", "Assets/Scripts/GameLogic/CardEffects/PlaceStructureEffect.cs", "Assets/Scripts/GameLogic/Cards/Civ/CreateDam.cs", "Assets/Scripts/GameLogic/Cards/Civ/CreateVillage.cs", "Assets/Scripts/GameLogic/Cards/Civ/MechanicalBurst.cs", "Assets/Scripts/GameLogic/Cards/Civ/OilRefinery.cs", "Assets/Scripts/GameLogic/Cards/Civ/SolarFarm.cs", "Assets/Scripts/GameLogic/Cards/FreeCard.cs", "Assets/Scripts/GameLogic/Cards/GetOnePointCard.cs", "Assets/Scripts/GameLogic/Cards/MineralSurge.cs", "Assets/Scripts/GameLogic/Cards/SuperPointBurst.cs", "Assets/Scripts/GameLogic/Cards/WaterSurge.cs", "Assets/Scripts/GameLogic/Cards/WoodSurge.cs", "Assets/Scripts/GameLogic/Cards/World/Earthquake.cs", "Assets/Scripts/GameLogic/Cards/World/NaturalBurst.cs", "Assets/Scripts/GameLogic/Cards/World/SpiritOfTheLake.cs", "Assets/Scripts/GameLogic/Cards/World/SpiritOfTheMountains.cs", "Assets/Scripts/GameLogic/Enum/PlayerType.cs", "Assets/Scripts/GameLogic/Enum/RessourceTypes.cs", "Assets/Scripts/GameLogic/Enum/TileType.cs", "Assets/Scripts/GameLogic/GenerationConfig.cs", "Assets/Scripts/GameLogic/HumanPlayer.cs", "Assets/Scripts/GameLogic/IClickable.cs", "Assets/Scripts/GameLogic/PlayerInputDetection.cs", "Assets/Scripts/GameLogic/PlayerInputNotifier.cs", "Assets/Scripts/GameLogic/RessourceButtonHandler.cs", "Assets/Scripts/Observer.cs", "Assets/Scripts/Testing&Debug/GameLogger.cs", "Assets/Scripts/UI/AnimationController.cs", "Assets/Scripts/UI/FinalScreenUI.cs", "Assets/Scripts/UI/MaxScoreUpdate.cs", "Assets/Scripts/UI/Menu/ButtonController.cs", "Assets/Scripts/UI/Menu/ButtonListController.cs", "Assets/Scripts/UI/Menu/InGameMenu.cs", "Assets/Scripts/UI/PlayerTurnUi.cs", "Assets/Scripts/UI/ResourcePanel/ResourceAnimationController.cs", "Assets/Scripts/UI/ResourcePanel/ResourceIncomeObserver.cs", "Assets/Scripts/UI/ResourcePanel/ResourceObserver.cs", "Assets/Scripts/UI/ResourcePanel/ResourcesPanel.cs", "Assets/Scripts/UI/TileInfo.cs", "Assets/TutorialInfo/Scripts/Editor/ReadmeEditor.cs", "Assets/TutorialInfo/Scripts/Readme.cs" ]
    }, {
      "name" : "6-20 changes",
      "sourceFileFilters" : [ ],
      "files" : [ "Assets/Scripts/Environnement/AnimalMouvement.cs", "Assets/Scripts/GameLogic/AIPlayer.cs", "Assets/Scripts/GameLogic/Board.cs", "Assets/Scripts/GameLogic/Card.cs", "Assets/Scripts/GameLogic/CardEffects/GainPointEffect.cs", "Assets/Scripts/GameLogic/Cards/CardData.cs", "Assets/Scripts/GameLogic/GameManager.cs", "Assets/Scripts/GameLogic/GameState.cs", "Assets/Scripts/GameLogic/Player.cs", "Assets/Scripts/GameLogic/Tile.cs", "Assets/Scripts/SceneChanger.cs", "Assets/Scripts/UI/Chat.cs", "Assets/Scripts/UI/ScoreObserver.cs" ]
    }, {
      "name" : "21-50 changes",
      "sourceFileFilters" : [ ],
      "files" : [ ]
    }, {
      "name" : "51-100 changes",
      "sourceFileFilters" : [ ],
      "files" : [ ]
    }, {
      "name" : "101+ changes",
      "sourceFileFilters" : [ ],
      "files" : [ ]
    } ],
    "metaComponents" : [ ],
    "groups" : [ ],
    "includeRemainingFiles" : true,
    "dependenciesFinder" : {
      "useBuiltInDependencyFinders" : false,
      "rules" : [ ],
      "metaRules" : [ ]
    },
    "renderingOptions" : {
      "orientation" : "TB",
      "maxNumberOfDependencies" : 100,
      "renderComponentsWithoutDependencies" : true,
      "renderIndirectDependencies" : false,
      "renderInternalIndirectDependencies" : false,
      "reverseDirection" : false
    },
    "includeExternalComponents" : true,
    "dependencyLinkThreshold" : 1,
    "duplicationLinkThreshold" : 50,
    "temporalLinkThreshold" : 1,
    "maxSearchDepthLines" : 200
  } ],
  "concernGroups" : [ {
    "name" : "general",
    "concerns" : [ {
      "name" : "TODOs",
      "sourceFileFilters" : [ {
        "pathPattern" : "",
        "contentPattern" : ".*(TODO|FIXME)( |:|\t).*",
        "exception" : false,
        "note" : ""
      } ],
      "files" : [ ],
      "textOperations" : [ ]
    } ],
    "metaConcerns" : [ ]
  } ],
  "goalsAndControls" : [ {
    "goal" : "Keep the system simple and easy to change",
    "description" : "Aim at keeping the system size modest (less than 200,000 LOC is good), duplication low (less than 5% is good), files small (no files longer than 1000 LOC is good), and units simple (no units with more than 25 decision points is good).",
    "controls" : [ {
      "metric" : "LINES_OF_CODE_MAIN",
      "description" : "Total number of lines of main code",
      "desiredRange" : {
        "min" : "0",
        "max" : "200000",
        "tolerance" : "20000"
      }
    }, {
      "metric" : "DUPLICATION_PERCENTAGE",
      "description" : "System duplication",
      "desiredRange" : {
        "min" : "0",
        "max" : "5",
        "tolerance" : "1"
      }
    }, {
      "metric" : "VERY_HIGH_RISK_FILE_SIZE_COUNT",
      "description" : "The number of very large files",
      "desiredRange" : {
        "min" : "0",
        "max" : "0",
        "tolerance" : "1"
      }
    }, {
      "metric" : "CONDITIONAL_COMPLEXITY_VERY_HIGH_RISK_COUNT",
      "description" : "Number of very complex units",
      "desiredRange" : {
        "min" : "0",
        "max" : "0",
        "tolerance" : "1"
      }
    } ]
  } ],
  "trendAnalysis" : {
    "saveHistory" : false,
    "frequency" : "weekly",
    "maxReferencePointsForAnalysis" : 20,
    "historyFolder" : "history"
  },
  "fileHistoryAnalysis" : {
    "importPath" : "",
    "ignoreContributors" : [ ],
    "bots" : [ ".*\\[bot\\].*", ".*[-]bot[@].*" ],
    "anonymizeContributors" : false,
    "transformContributorEmails" : [ ]
  },
  "analysis" : {
    "skipDuplication" : false,
    "skipDependencies" : false,
    "saveSourceFiles" : true,
    "saveCodeFragments" : true,
    "maxFileSizeBytes" : 1000000,
    "maxLines" : 10000,
    "maxLineLength" : 1000,
    "maxTemporalDependenciesDepthDays" : 180,
    "locDuplicationThreshold" : 10000000,
    "minDuplicationBlockLoc" : 6,
    "maxTopListSize" : 50,
    "analyzerOverrides" : [ ],
    "fileSizeThresholds" : {
      "low" : 100,
      "medium" : 200,
      "high" : 500,
      "veryHigh" : 1000
    },
    "fileAgeThresholds" : {
      "low" : 30,
      "medium" : 90,
      "high" : 180,
      "veryHigh" : 365
    },
    "fileUpdateFrequencyThresholds" : {
      "low" : 5,
      "medium" : 20,
      "high" : 50,
      "veryHigh" : 100
    },
    "fileContributorsCountThresholds" : {
      "low" : 1,
      "medium" : 5,
      "high" : 10,
      "veryHigh" : 25
    },
    "unitSizeThresholds" : {
      "low" : 10,
      "medium" : 20,
      "high" : 50,
      "veryHigh" : 100
    },
    "conditionalComplexityThresholds" : {
      "low" : 5,
      "medium" : 10,
      "high" : 25,
      "veryHigh" : 50
    },
    "customHtmlReportHeaderFragment" : "",
    "analyzeConcernOverlaps" : false
  },
  "tagRules" : [ {
    "tag" : "jenkins",
    "color" : "#7CB9E8",
    "pathPatterns" : [ "(|.*/)Jenkinsfile", "(|.*/)Jenkinsfile[.][a-z0-9_]+" ],
    "excludePathPatterns" : [ ]
  }, {
    "tag" : "travis",
    "color" : "#7CB9E8",
    "pathPatterns" : [ "(|.*/)[.]travis[.]ya?ml" ],
    "excludePathPatterns" : [ ]
  }, {
    "tag" : "github actions",
    "color" : "#7CB9E8",
    "pathPatterns" : [ "(|.*/)[.]github[/]workflows[/].*" ],
    "excludePathPatterns" : [ ]
  }, {
    "tag" : "circleci",
    "color" : "#7CB9E8",
    "pathPatterns" : [ "(|.*/)[.]circleci.*" ],
    "excludePathPatterns" : [ ]
  }, {
    "tag" : "gitlab",
    "color" : "#7CB9E8",
    "pathPatterns" : [ "(|.*/)[.]gitlab.*" ],
    "excludePathPatterns" : [ ]
  }, {
    "tag" : "maven",
    "color" : "#B9D9EB",
    "pathPatterns" : [ "(|.*/)pom[.]xml" ],
    "excludePathPatterns" : [ ]
  }, {
    "tag" : "pnpm",
    "color" : "#B9D9EB",
    "pathPatterns" : [ "(|.*/)pnpm.*[.](ya?ml|json)" ],
    "excludePathPatterns" : [ ]
  }, {
    "tag" : "npm",
    "color" : "#B9D9EB",
    "pathPatterns" : [ "(|.*/)package[.]json" ],
    "excludePathPatterns" : [ ]
  }, {
    "tag" : "yarn",
    "color" : "#B9D9EB",
    "pathPatterns" : [ "(|.*/)[.]yarnrc", "(|.*/)yarn[.]lock" ],
    "excludePathPatterns" : [ ]
  }, {
    "tag" : "jest",
    "color" : "#B9D9EB",
    "pathPatterns" : [ "(|.*/)jest[.].*" ],
    "excludePathPatterns" : [ ]
  }, {
    "tag" : "babel",
    "color" : "#B9D9EB",
    "pathPatterns" : [ "(|.*/)[.]babel[.]config[.]json" ],
    "excludePathPatterns" : [ ]
  }, {
    "tag" : "gradle",
    "color" : "#B9D9EB",
    "pathPatterns" : [ "(|.*/)build[.]gradle" ],
    "excludePathPatterns" : [ ]
  }, {
    "tag" : "sbt",
    "color" : "#B9D9EB",
    "pathPatterns" : [ "(|.*/)build[.]sbt" ],
    "excludePathPatterns" : [ ]
  }, {
    "tag" : "bazel",
    "color" : "#B9D9EB",
    "pathPatterns" : [ "(|.*/)BUILD[.]bazel" ],
    "excludePathPatterns" : [ ]
  }, {
    "tag" : "pip",
    "color" : "#B9D9EB",
    "pathPatterns" : [ "(|.*/)pip[.]conf", "(|.*/)Pipfile" ],
    "excludePathPatterns" : [ ]
  }, {
    "tag" : "nuget",
    "color" : "#B9D9EB",
    "pathPatterns" : [ "(|.*/)[.]nuget/.*", "(|.*/)[.]nuget[.]config" ],
    "excludePathPatterns" : [ ]
  }, {
    "tag" : "aws codebuild",
    "color" : "#B9D9EB",
    "pathPatterns" : [ "(|.*/)buildspec[.]yml" ],
    "excludePathPatterns" : [ ]
  }, {
    "tag" : "renovate",
    "color" : "#B9D9EB",
    "pathPatterns" : [ "(|.*/)renovate[.]json5?" ],
    "excludePathPatterns" : [ ]
  }, {
    "tag" : "dependabot",
    "color" : "#B9D9EB",
    "pathPatterns" : [ "(|.*/)dependabot[.]ya?ml" ],
    "excludePathPatterns" : [ ]
  }, {
    "tag" : "gemfile",
    "color" : "#B9D9EB",
    "pathPatterns" : [ "(|.*/)Gemfile" ],
    "excludePathPatterns" : [ ]
  }, {
    "tag" : "podfile",
    "color" : "#B9D9EB",
    "pathPatterns" : [ "(|.*/)Podfile" ],
    "excludePathPatterns" : [ ]
  }, {
    "tag" : "make",
    "color" : "#B9D9EB",
    "pathPatterns" : [ "(|.*/)Makefile" ],
    "excludePathPatterns" : [ ]
  }, {
    "tag" : "docker",
    "color" : "#A3C1AD",
    "pathPatterns" : [ "(|.*/)Dockerfile" ],
    "excludePathPatterns" : [ ]
  }, {
    "tag" : "helm",
    "color" : "#A3C1AD",
    "pathPatterns" : [ "(|.*/)helmfile[.]ya?ml", "(|.*/)[.]helmignore" ],
    "excludePathPatterns" : [ ]
  } ]
}