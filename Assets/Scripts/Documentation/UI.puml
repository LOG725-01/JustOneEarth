@startuml UI
allow_mixing
skinparam ComponentBackgroundColor LightSkyBlue

!include toImport.puml

enum PlayerType {
    Civilisation
    World
}

enum RessourceTypes {
    Trees
    Minerals
    Water
    Sun
    Oil
}

package Menu {
    class ButtonController {
        -ButtonListController listController
        -int listControllerIndex

        +void SetListController(ButtonListController _listController, int index)
        +void HighlightAnimation()
        +void NormalAnimation(bool force)
        +void PressAnimation()
        +void Select()
    }

    note left of ButtonController::Select
    called when 
    button is pressed
    end note


    class ButtonListController {
        -ButtonController[] buttonControllers
        -GameObject[] panels

        -void OnValidate()
        -void Awake()
        +void AllNormal()
        +void PressButton(int button)
        +void OnDisable()
    }

    class InGameMenu {
        - GameObject inGameMenu
        + void ToggleMenu()
        + bool IsMenuOpen()
    }
}

package ResourcePanel {
    class ResourceAnimationController {
        +void Open()
        +void Close()
    }

    class ResourceObserver {
        - TextMeshProUGUI resourcesNumber
        - RessourceTypes resourceType
    }
    class ResourceIncomeObserver {
        - TextMeshProUGUI resourceIncome
        - string suffix
        - RessourceTypes resourceType
    }

    class ResourcesPanel {
        -TextMeshProUGUI buttonText
        -ResourceAnimationController[] resources
        -bool isOpened

        -void Awake()
        +void OpenClose()
        -void Open()
        -void Close()
    }

    component ResourceVisualPrefab
}

class Chat {
    + {static} Chat Instance
    - TextMeshProUGUI chatLog
    - TextMeshProUGUI lastLine
    - TextMeshProUGUI buttonText
    - TMP_InputField chatInput
    - string chatText
    - bool isOpened
    - bool wasOpened
    -void Awake()
    -void Start()
    -void Update()
    +void Clean()
    +void OpenClose()
    +void InputSelect()
    +void InputDeselect()
    -void Open()
    -void Close()
    -void AddLine(string line)
    +void AddChatMessage(string userName, string message)
    +void AddAnnouncement(string userName, string announcement)
    +void AddChatMessage(string message)
    +bool IsChatInputSelected()
    +bool IsOpened()
}
note right of Chat
AddChatMessage(string message) :
  Event Method 
  for the player
  text input
end note

class ScoreObserver {
    - Slider slider
    - TextMeshProUGUI scoreText
    - PlayerType playerType
    - void Awake()
    - void Display(int score)
}

class MaxScoreUpdate {
    - Slider slider
    - TextMeshProUGUI maxScoreText
    +void SetTotalScore(int value)
}

class TileInfo{
    +{static} TileInfo Instance

    -GameObject tileInfoObject

    -TextMeshProUGUI tileTypeText
    -TextMeshProUGUI ressourceText
    -TextMeshProUGUI conditionText
    -TextMeshProUGUI ownerText

    - void Awake()

    + void ChangeInfo(GameObject tileObject)

    - void SetTexts(
        string tileType, 
        int resources, 
        string resourceType, 
        bool isOwner = true, 
        string condition = "", 
        string owner = "Civilisation")

    +void Clear()
}

class RessourceButtonHandler {
    + static RessourceButtonHandler Instance
    - Player player
    + Player Player { set }

    - void Awake()
    - void ShowOwnedTiles(RessourceTypes ressourceTypes)
    + void ShowOwnedForest()
    + void ShowOwnedMontain()
    + void ShowOwnedPlain()
    + void ShowOwnedDesert()
    + void ShowOwnedLake()
}

class PlayerTurnUi {
    + {static} PlayerTurnUi Instance;
    - TextMeshProUGUI turnText;
    - void Awake()
    + void SetTurn(PlayerType currentPlayer)
    - void Civilisation()
    - void World()
}

class FinalScreenUI {
    + {static} FinalScreenUI Instance
    - GameObject panel
    - TMP_Text endMessage
    - Button toMenuButton
    - void Awake()
    - void Start()
    + void Show(string winnerName)
}

component ScoreVisualPrefab

Menu.ButtonController --l--|> AnimationController
ResourcePanel.ResourcesPanel --l--|> AnimationController
ResourcePanel.ResourceAnimationController --l--|> AnimationController

Chat --l--|> AnimationController

ScoreObserver --l--|> Observer
ResourcePanel.ResourceObserver --l--|> Observer
ResourcePanel.ResourceIncomeObserver --l--|> Observer

Menu.ButtonListController -l--o Menu.ButtonController : "Has"
Menu.ButtonController --o Menu.ButtonListController : "Has"

ResourcePanel.ResourceAnimationController --o ResourcePanel.ResourcesPanel : "Has"

ResourcePanel.ResourceVisualPrefab --o ResourcePanel.ResourceIncomeObserver : "Has"
ResourcePanel.ResourceVisualPrefab --o ResourcePanel.ResourceObserver : "Has"

ScoreVisualPrefab --o MaxScoreUpdate : "Has"
ScoreVisualPrefab --o ScoreObserver : "Has"

ScoreObserver --o PlayerType
ResourcePanel.ResourceObserver --o RessourceTypes

RessourceButtonHandler --o Player

@enduml